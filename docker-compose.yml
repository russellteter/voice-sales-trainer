version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: voice-sales-trainer-db
    environment:
      POSTGRES_DB: voice_sales_trainer
      POSTGRES_USER: voice_trainer
      POSTGRES_PASSWORD: voice_trainer_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voice_trainer -d voice_sales_trainer"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: voice-sales-trainer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: voice-sales-trainer-backend
    environment:
      - DATABASE_URL=postgresql://voice_trainer:voice_trainer_pass@postgres:5432/voice_sales_trainer
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production-docker
      - FRONTEND_URL=http://localhost:3000
      - DEBUG=true
      - ENVIRONMENT=development
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY:-}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY:-}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js frontend
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: voice-sales-trainer-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_ELEVENLABS_ENABLED=${ELEVENLABS_ENABLED:-false}
      - NEXT_PUBLIC_CLAUDE_ENABLED=${CLAUDE_ENABLED:-false}
      - NEXT_PUBLIC_ENVIRONMENT=development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    driver: bridge