#!/bin/bash

# Environment Setup Helper for Voice Sales Trainer
# Generates production-ready environment configuration

set -euo pipefail

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}🔧 Voice Sales Trainer - Environment Setup${NC}"
echo

# Function to generate secure random string
generate_secret() {
    openssl rand -hex 32
}

# Get platform
echo "Which platform are you deploying to?"
echo "1) Railway"
echo "2) Render" 
echo "3) DigitalOcean"
echo "4) AWS/Custom"
echo -n "Enter choice (1-4): "
read platform_choice

case $platform_choice in
    1) PLATFORM="railway";;
    2) PLATFORM="render";;
    3) PLATFORM="digitalocean";;
    4) PLATFORM="custom";;
    *) PLATFORM="custom";;
esac

# Get API keys
echo
echo "Enter your API keys:"
echo -n "ElevenLabs API Key: "
read -s ELEVENLABS_API_KEY
echo

echo -n "Claude API Key: "
read -s CLAUDE_API_KEY
echo

# Get domain info
echo
if [[ "$PLATFORM" == "custom" ]]; then
    echo -n "Frontend URL (e.g., https://your-app.com): "
    read FRONTEND_URL
    
    echo -n "Backend URL (e.g., https://api.your-app.com): "
    read BACKEND_URL
else
    echo "Domain URLs will be auto-generated by $PLATFORM"
    FRONTEND_URL="https://your-app.${PLATFORM}.app"
    BACKEND_URL="https://your-api.${PLATFORM}.app"
fi

# Generate secrets
JWT_SECRET=$(generate_secret)
SECRET_KEY=$(generate_secret)

# Create .env.production file
cat > .env.production << EOF
# Voice Sales Trainer - Production Environment
# Generated on $(date)

# ===========================================
# SECURITY & AUTHENTICATION
# ===========================================
JWT_SECRET_KEY=$JWT_SECRET
SECRET_KEY=$SECRET_KEY
ENVIRONMENT=production
DEBUG=false

# ===========================================
# API INTEGRATIONS
# ===========================================
ELEVENLABS_API_KEY=$ELEVENLABS_API_KEY
CLAUDE_API_KEY=$CLAUDE_API_KEY
ELEVENLABS_MODEL_ID=eleven_turbo_v2_5
CLAUDE_MODEL=claude-3-sonnet-20240229

# ===========================================
# DOMAIN CONFIGURATION
# ===========================================
FRONTEND_URL=$FRONTEND_URL
BACKEND_URL=$BACKEND_URL
CORS_ALLOWED_ORIGINS=$FRONTEND_URL

# ===========================================
# DATABASE & CACHE
# ===========================================
# These will be auto-configured by your platform
DATABASE_URL=\${DATABASE_URL}
REDIS_URL=\${REDIS_URL}

# ===========================================
# PERFORMANCE & SCALING
# ===========================================
MAX_CONCURRENT_SESSIONS=200
WORKER_PROCESSES=4
WORKER_CONNECTIONS=1000
SESSION_TIMEOUT_MINUTES=30

# ===========================================
# LOGGING & MONITORING
# ===========================================
LOG_LEVEL=INFO
ENABLE_METRICS_COLLECTION=true
SENTRY_DSN=

# ===========================================
# SSL & SECURITY
# ===========================================
USE_SSL=true
FORCE_HTTPS=true

# ===========================================
# RATE LIMITING
# ===========================================
RATE_LIMIT_PER_MINUTE=120
VOICE_REQUESTS_PER_MINUTE=60

# ===========================================
# FILE UPLOAD
# ===========================================
MAX_UPLOAD_SIZE=52428800
UPLOAD_DIR=/app/uploads
ALLOWED_FILE_TYPES=.wav,.mp3,.ogg,.webm

# ===========================================
# WEBSOCKET CONFIGURATION
# ===========================================
WS_HEARTBEAT_INTERVAL=30
WS_MAX_MESSAGE_SIZE=2097152
WS_ALLOWED_ORIGINS=$FRONTEND_URL

# ===========================================
# VOICE PROCESSING
# ===========================================
VOICE_PROCESSING_TIMEOUT=10
ENABLE_VOICE_ANALYTICS=true
VOICE_SAMPLE_RATE=16000

# ===========================================
# FEATURE FLAGS
# ===========================================
ENABLE_REAL_TIME_COACHING=true
ENABLE_DEBUG_AUDIO_LOGGING=false
MOCK_ELEVENLABS_RESPONSES=false
TEST_MODE=false
EOF

# Create platform-specific instructions
case $PLATFORM in
    "railway")
        cat > RAILWAY_SETUP.md << EOF
# Railway Deployment Instructions

1. Install Railway CLI:
   \`\`\`bash
   npm install -g @railway/cli
   \`\`\`

2. Login and initialize:
   \`\`\`bash
   railway login
   railway init
   \`\`\`

3. Add services:
   \`\`\`bash
   railway add postgresql
   railway add redis
   \`\`\`

4. Set environment variables from .env.production file in Railway dashboard

5. Deploy:
   \`\`\`bash
   railway up
   \`\`\`
EOF
        echo -e "${GREEN}✅ Created RAILWAY_SETUP.md with deployment instructions${NC}"
        ;;
        
    "render")
        echo -e "${YELLOW}⚠️  For Render: Use the render.yaml file and set environment variables in dashboard${NC}"
        ;;
        
    "digitalocean")
        echo -e "${YELLOW}⚠️  For DigitalOcean: Use the .do/app.yaml file and update environment variables${NC}"
        ;;
esac

echo
echo -e "${GREEN}✅ Environment configuration created!${NC}"
echo
echo "Files generated:"
echo "  📄 .env.production - Complete environment configuration"
if [[ "$PLATFORM" == "railway" ]]; then
    echo "  📄 RAILWAY_SETUP.md - Railway deployment instructions"
fi

echo
echo "Next steps:"
echo "1. Review the .env.production file"
echo "2. Upload environment variables to your platform"
echo "3. Deploy your application"
echo "4. Test the deployment"

echo
echo -e "${BLUE}🔒 Security Note: Keep your API keys secure and never commit them to version control!${NC}"